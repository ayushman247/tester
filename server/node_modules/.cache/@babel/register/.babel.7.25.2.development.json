{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\ayush\\\\Desktop\\\\Api_Test\\\\server\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\ayush\\\\Desktop\\\\Api_Test\\\\server\",\"filename\":\"C:\\\\Users\\\\ayush\\\\Desktop\\\\Api_Test\\\\server\\\\test\\\\blog.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ayush\\\\Desktop\\\\Api_Test\\\\server\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.25.2:development":{"value":{"code":"const chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst app = require('../index');\nconst mongoose = require('mongoose');\nconst Blog = require('../model/Blog');\nconst {\n  expect\n} = chai;\nchai.use(chaiHttp);\ndescribe(\"Blog API\", function () {\n  before(async function () {\n    await mongoose.connect(\"mongodb://localhost:27017/testdb\", {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n  });\n  beforeEach(async function () {\n    await Blog.deleteMany({});\n  });\n  after(async function () {\n    await mongoose.connection.close();\n  });\n  describe(\"GET /\", function () {\n    it(\"should fetch the list of blogs\", function (done) {\n      chai.request(app).get(\"/api/blogs/\").end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an(\"object\");\n        expect(res.body.blogList).to.be.an(\"array\");\n        done();\n      });\n    });\n  });\n  describe(\"POST /add\", function () {\n    it(\"should add a new blog\", function (done) {\n      chai.request(app).post(\"/api/blogs/add\").send({\n        title: \"Test Blog\",\n        description: \"This is a test blog.\"\n      }).end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an(\"object\");\n        expect(res.body.newlyCreateBlog).to.have.property(\"title\").eql(\"Test Blog\");\n        expect(res.body.newlyCreateBlog).to.have.property(\"description\").eql(\"This is a test blog.\");\n        done();\n      });\n    });\n  });\n  describe(\"PUT /update/:id\", function () {\n    it(\"should update an existing blog\", async function () {\n      const blog = await Blog.create({\n        title: \"Old Title\",\n        description: \"Old Description\"\n      });\n      chai.request(app).put(`/api/blogs/update/${blog._id}`).send({\n        title: \"Updated Title\",\n        description: \"Updated Description\"\n      }).end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an(\"object\");\n        expect(res.body.currentBlogToUpdate).to.have.property(\"title\").eql(\"Updated Title\");\n        expect(res.body.currentBlogToUpdate).to.have.property(\"description\").eql(\"Updated Description\");\n        done();\n      });\n    });\n  });\n  describe(\"DELETE /delete/:id\", function () {\n    it(\"should delete an existing blog\", async function () {\n      const blog = await Blog.create({\n        title: \"Blog to be deleted\",\n        description: \"This blog will be deleted.\"\n      });\n      chai.request(app).delete(`/api/blogs/delete/${blog._id}`).end(function (err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body).to.be.an(\"object\");\n        expect(res.body.message).to.eql(\"Successfully Deleted\");\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chai","require","chaiHttp","app","mongoose","Blog","expect","use","describe","before","connect","useNewUrlParser","useUnifiedTopology","beforeEach","deleteMany","after","connection","close","it","done","request","get","end","err","res","to","have","status","body","be","an","blogList","post","send","title","description","newlyCreateBlog","property","eql","blog","create","put","_id","currentBlogToUpdate","delete","message"],"sourceRoot":"C:\\Users\\ayush\\Desktop\\Api_Test\\server\\test\\","sources":["blog.test.js"],"sourcesContent":["const chai = require('chai');\r\nconst chaiHttp = require('chai-http');\r\nconst app = require('../index'); \r\nconst mongoose = require('mongoose');\r\nconst Blog = require('../model/Blog');\r\n\r\nconst { expect } = chai;\r\nchai.use(chaiHttp);\r\n\r\ndescribe(\"Blog API\", function () {\r\n  before(async function () {\r\n    await mongoose.connect(\"mongodb://localhost:27017/testdb\", {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true,\r\n    });\r\n  });\r\n\r\n  beforeEach(async function () {\r\n    await Blog.deleteMany({});\r\n  });\r\n\r\n  after(async function () {\r\n    await mongoose.connection.close();\r\n  });\r\n\r\n  describe(\"GET /\", function () {\r\n    it(\"should fetch the list of blogs\", function (done) {\r\n      chai\r\n        .request(app)\r\n        .get(\"/api/blogs/\")\r\n        .end(function (err, res) {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an(\"object\");\r\n          expect(res.body.blogList).to.be.an(\"array\");\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe(\"POST /add\", function () {\r\n    it(\"should add a new blog\", function (done) {\r\n      chai\r\n        .request(app)\r\n        .post(\"/api/blogs/add\")\r\n        .send({\r\n          title: \"Test Blog\",\r\n          description: \"This is a test blog.\",\r\n        })\r\n        .end(function (err, res) {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an(\"object\");\r\n          expect(res.body.newlyCreateBlog).to.have.property(\"title\").eql(\"Test Blog\");\r\n          expect(res.body.newlyCreateBlog).to.have.property(\"description\").eql(\"This is a test blog.\");\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe(\"PUT /update/:id\", function () {\r\n    it(\"should update an existing blog\", async function () {\r\n      const blog = await Blog.create({\r\n        title: \"Old Title\",\r\n        description: \"Old Description\",\r\n      });\r\n\r\n      chai\r\n        .request(app)\r\n        .put(`/api/blogs/update/${blog._id}`)\r\n        .send({\r\n          title: \"Updated Title\",\r\n          description: \"Updated Description\",\r\n        })\r\n        .end(function (err, res) {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an(\"object\");\r\n          expect(res.body.currentBlogToUpdate).to.have.property(\"title\").eql(\"Updated Title\");\r\n          expect(res.body.currentBlogToUpdate).to.have.property(\"description\").eql(\"Updated Description\");\r\n          done();\r\n        });\r\n    });\r\n  });\r\n\r\n  describe(\"DELETE /delete/:id\", function () {\r\n    it(\"should delete an existing blog\", async function () {\r\n      const blog = await Blog.create({\r\n        title: \"Blog to be deleted\",\r\n        description: \"This blog will be deleted.\",\r\n      });\r\n\r\n      chai\r\n        .request(app)\r\n        .delete(`/api/blogs/delete/${blog._id}`)\r\n        .end(function (err, res) {\r\n          expect(res).to.have.status(200);\r\n          expect(res.body).to.be.an(\"object\");\r\n          expect(res.body.message).to.eql(\"Successfully Deleted\");\r\n          done();\r\n        });\r\n    });\r\n  });\r\n});\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,GAAG,GAAGF,OAAO,CAAC,UAAU,CAAC;AAC/B,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,eAAe,CAAC;AAErC,MAAM;EAAEK;AAAO,CAAC,GAAGN,IAAI;AACvBA,IAAI,CAACO,GAAG,CAACL,QAAQ,CAAC;AAElBM,QAAQ,CAAC,UAAU,EAAE,YAAY;EAC/BC,MAAM,CAAC,kBAAkB;IACvB,MAAML,QAAQ,CAACM,OAAO,CAAC,kCAAkC,EAAE;MACzDC,eAAe,EAAE,IAAI;MACrBC,kBAAkB,EAAE;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFC,UAAU,CAAC,kBAAkB;IAC3B,MAAMR,IAAI,CAACS,UAAU,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC;EAEFC,KAAK,CAAC,kBAAkB;IACtB,MAAMX,QAAQ,CAACY,UAAU,CAACC,KAAK,CAAC,CAAC;EACnC,CAAC,CAAC;EAEFT,QAAQ,CAAC,OAAO,EAAE,YAAY;IAC5BU,EAAE,CAAC,gCAAgC,EAAE,UAAUC,IAAI,EAAE;MACnDnB,IAAI,CACDoB,OAAO,CAACjB,GAAG,CAAC,CACZkB,GAAG,CAAC,aAAa,CAAC,CAClBC,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;QACvBlB,MAAM,CAACkB,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;QAC/BrB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAAC,CAACH,EAAE,CAACI,EAAE,CAACC,EAAE,CAAC,QAAQ,CAAC;QACnCxB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACG,QAAQ,CAAC,CAACN,EAAE,CAACI,EAAE,CAACC,EAAE,CAAC,OAAO,CAAC;QAC3CX,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFX,QAAQ,CAAC,WAAW,EAAE,YAAY;IAChCU,EAAE,CAAC,uBAAuB,EAAE,UAAUC,IAAI,EAAE;MAC1CnB,IAAI,CACDoB,OAAO,CAACjB,GAAG,CAAC,CACZ6B,IAAI,CAAC,gBAAgB,CAAC,CACtBC,IAAI,CAAC;QACJC,KAAK,EAAE,WAAW;QAClBC,WAAW,EAAE;MACf,CAAC,CAAC,CACDb,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;QACvBlB,MAAM,CAACkB,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;QAC/BrB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAAC,CAACH,EAAE,CAACI,EAAE,CAACC,EAAE,CAAC,QAAQ,CAAC;QACnCxB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACQ,eAAe,CAAC,CAACX,EAAE,CAACC,IAAI,CAACW,QAAQ,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC,WAAW,CAAC;QAC3EhC,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACQ,eAAe,CAAC,CAACX,EAAE,CAACC,IAAI,CAACW,QAAQ,CAAC,aAAa,CAAC,CAACC,GAAG,CAAC,sBAAsB,CAAC;QAC5FnB,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFX,QAAQ,CAAC,iBAAiB,EAAE,YAAY;IACtCU,EAAE,CAAC,gCAAgC,EAAE,kBAAkB;MACrD,MAAMqB,IAAI,GAAG,MAAMlC,IAAI,CAACmC,MAAM,CAAC;QAC7BN,KAAK,EAAE,WAAW;QAClBC,WAAW,EAAE;MACf,CAAC,CAAC;MAEFnC,IAAI,CACDoB,OAAO,CAACjB,GAAG,CAAC,CACZsC,GAAG,CAAC,qBAAqBF,IAAI,CAACG,GAAG,EAAE,CAAC,CACpCT,IAAI,CAAC;QACJC,KAAK,EAAE,eAAe;QACtBC,WAAW,EAAE;MACf,CAAC,CAAC,CACDb,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;QACvBlB,MAAM,CAACkB,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;QAC/BrB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAAC,CAACH,EAAE,CAACI,EAAE,CAACC,EAAE,CAAC,QAAQ,CAAC;QACnCxB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACe,mBAAmB,CAAC,CAAClB,EAAE,CAACC,IAAI,CAACW,QAAQ,CAAC,OAAO,CAAC,CAACC,GAAG,CAAC,eAAe,CAAC;QACnFhC,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACe,mBAAmB,CAAC,CAAClB,EAAE,CAACC,IAAI,CAACW,QAAQ,CAAC,aAAa,CAAC,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAC/FnB,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFX,QAAQ,CAAC,oBAAoB,EAAE,YAAY;IACzCU,EAAE,CAAC,gCAAgC,EAAE,kBAAkB;MACrD,MAAMqB,IAAI,GAAG,MAAMlC,IAAI,CAACmC,MAAM,CAAC;QAC7BN,KAAK,EAAE,oBAAoB;QAC3BC,WAAW,EAAE;MACf,CAAC,CAAC;MAEFnC,IAAI,CACDoB,OAAO,CAACjB,GAAG,CAAC,CACZyC,MAAM,CAAC,qBAAqBL,IAAI,CAACG,GAAG,EAAE,CAAC,CACvCpB,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;QACvBlB,MAAM,CAACkB,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;QAC/BrB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAAC,CAACH,EAAE,CAACI,EAAE,CAACC,EAAE,CAAC,QAAQ,CAAC;QACnCxB,MAAM,CAACkB,GAAG,CAACI,IAAI,CAACiB,OAAO,CAAC,CAACpB,EAAE,CAACa,GAAG,CAAC,sBAAsB,CAAC;QACvDnB,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1722985401038}}